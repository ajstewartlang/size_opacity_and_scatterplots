facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation")
all_exp_df <- read_csv("data/all_exp.csv") %>%
drop_na() %>%
filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
#| label: labelling-function
# creates labels vector for use with plotting functions
labels_size_contrast <- c(A = "Standard Orientation Size\nStandard Orientation Contrast",
B = "Inverted Orientation Size\nInverted Orientation Contrast",
X = "Standard Orientation Size\nInverted Orientation Contrast",
Y = "Inverted Orientation Size\nStandard Orientation Contrast")
labels_all_exp <- c(additive_manipulation = "Size and Contrast Manipulated",
contrast_manipulated = "Contrast Manipulated",
size_manipulated = "Size Manipulated",
standard_plot = "No Manipulation Present")
labels_power <- c(size_power = "Size\nPower",
contrast_power = "Contrast\nPower",
additive_power = "Size and Contrast\nCombined Power")
#| label: fig-est-multi-exp
#| include: true
#| out-width: "100%"
#| fig-asp: 0.33
#| fig-cap: Plotting *r* estimation error against the objective *r* value for contrast and size decay in isolation from previous work, and for their combination in the present study. The dashed line represents 0 error in correlation estimation, and standard deviations are shown as error bars. Note that these curves have been smoothed.
# dataframe containing values from previous work and the current is included
# in the data folder
# set facet orders
facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation")
all_exp_df <- read_csv("data/all_exp.csv") %>%
drop_na() %>%
filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
data <- data.frame(
Group = rep(c("A", "B", "C", "D"), each = 4),
X = rep(1:4, times = 4),
Y = rnorm(16),
SD = runif(16, 0.1, 0.5)
)
View(data)
#| label: fig-est-multi-exp
#| include: true
#| out-width: "100%"
#| fig-asp: 0.33
#| fig-cap: Plotting *r* estimation error against the objective *r* value for contrast and size decay in isolation from previous work, and for their combination in the present study. The dashed line represents 0 error in correlation estimation, and standard deviations are shown as error bars. Note that these curves have been smoothed.
# dataframe containing values from previous work and the current is included
# in the data folder
# set facet orders
facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation", "standard_plot")
errors_bar_group("contrast_manipulated", "size_manipulated", "additive_manipulation")
errors_bar_group <- ("contrast_manipulated", "size_manipulated", "additive_manipulation")
errors_bar_group <- c("contrast_manipulated", "size_manipulated", "additive_manipulation")
#| label: fig-est-multi-exp
#| include: true
#| out-width: "100%"
#| fig-asp: 0.33
#| fig-cap: Plotting *r* estimation error against the objective *r* value for contrast and size decay in isolation from previous work, and for their combination in the present study. The dashed line represents 0 error in correlation estimation, and standard deviations are shown as error bars. Note that these curves have been smoothed.
# dataframe containing values from previous work and the current is included
# in the data folder
# set facet orders
facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation", "standard_plot")
errors_bar_group <- c("contrast_manipulated", "size_manipulated", "additive_manipulation")
all_exp_df <- read_csv("data/all_exp.csv") %>%
drop_na() %>%
filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(data = subset(all_exp_df, factor %in% error_bars_groupo),
mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
#| label: fig-est-multi-exp
#| include: true
#| out-width: "100%"
#| fig-asp: 0.33
#| fig-cap: Plotting *r* estimation error against the objective *r* value for contrast and size decay in isolation from previous work, and for their combination in the present study. The dashed line represents 0 error in correlation estimation, and standard deviations are shown as error bars. Note that these curves have been smoothed.
# dataframe containing values from previous work and the current is included
# in the data folder
# set facet orders
facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation", "standard_plot")
errors_bar_group <- c("contrast_manipulated", "size_manipulated", "additive_manipulation")
all_exp_df <- read_csv("data/all_exp.csv") %>%
drop_na() %>%
filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(data = subset(all_exp_df, factor %in% error_bars_group),
mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
#| label: fig-est-multi-exp
#| include: true
#| out-width: "100%"
#| fig-asp: 0.33
#| fig-cap: Plotting *r* estimation error against the objective *r* value for contrast and size decay in isolation from previous work, and for their combination in the present study. The dashed line represents 0 error in correlation estimation, and standard deviations are shown as error bars. Note that these curves have been smoothed.
# dataframe containing values from previous work and the current is included
# in the data folder
# set facet orders
facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation", "standard_plot")
error_bar_group <- c("contrast_manipulated", "size_manipulated", "additive_manipulation")
all_exp_df <- read_csv("data/all_exp.csv") %>%
drop_na() %>%
filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(data = subset(all_exp_df, factor %in% error_bar_group),
mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
#| label: fig-est-multi-exp
#| include: true
#| out-width: "100%"
#| fig-asp: 0.33
#| fig-cap: Plotting *r* estimation error against the objective *r* value for contrast and size decay in isolation from previous work, and for their combination in the present study. The dashed line represents 0 error in correlation estimation, and standard deviations are shown as error bars. Note that these curves have been smoothed.
# dataframe containing values from previous work and the current is included
# in the data folder
# set facet orders
facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation", "standard_plot")
error_bar_group <- c("contrast_manipulated", "size_manipulated", "additive_manipulation")
all_exp_df <- read_csv("data/all_exp.csv") %>%
drop_na() %>%
#filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(data = subset(all_exp_df, factor %in% error_bar_group),
mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
View(all_exp_df)
#| label: fig-est-multi-exp
#| include: true
#| out-width: "100%"
#| fig-asp: 0.33
#| fig-cap: Plotting *r* estimation error against the objective *r* value for contrast and size decay in isolation from previous work, and for their combination in the present study. The dashed line represents 0 error in correlation estimation, and standard deviations are shown as error bars. Note that these curves have been smoothed. Errorbars have not been
# dataframe containing values from previous work and the current is included
# in the data folder
# set facet orders
facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation", "standard_plot")
error_bar_group <- c("contrast_manipulated", "size_manipulated", "additive_manipulation")
all_exp_df <- read_csv("data/all_exp.csv") %>%
drop_na() %>%
#filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
View(all_exp_df)
just_standard <- all_exp_df %>% filter(factor == "standard_plot")
just_standard <- all_exp_df %>% filter(factor == "standard_plot") %>%
arrange(my_rs)
just_standard <- all_exp_df %>% filter(factor == "standard_plot") %>%
arrange(my_rs) %>% filter(row_number() %% 2 == 1)
all_exp_df <- all_exp_df %>% filter(factor =! "standard")
all_exp_df <- all_exp_df %>% filter(factor != "standard")
all_exp_df <- all_exp_df %>% filter(factor != "standard_plot")
all_exp_df <- rbind(all_exp_df, just_standard)
all_exp_df <- rbind(all_exp_df, just_standard) %>%
drop_na() %>%
filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
View(all_exp_df)
View(just_standard)
all_exp_df <- read_csv("data/all_exp.csv")
View(all_exp_df)
just_standard <- all_exp_df %>% filter(factor == "standard_plot") %>%
arrange(my_rs) %>% filter(row_number() %% 2 == 1)
View(just_standard)
all_exp_df <- all_exp_df %>% filter(factor != "standard_plot")
View(all_exp_df)
all_exp_df <- rbind(all_exp_df, just_standard) %>%
drop_na() %>%
filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
View(all_exp_df)
all_exp_df <- rbind(all_exp_df, just_standard) %>%
drop_na() %>%
filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
pre_df <- read_csv("data/all_exp.csv")
just_standard <- pre_df %>% filter(factor == "standard_plot") %>%
arrange(my_rs) %>% filter(row_number() %% 2 == 1)
no_standard <- pre_df %>% filter(factor != "standard_plot")
all_exp_df <- rbind(pre_df, just_standard) %>%
drop_na() %>%
filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
View(all_exp_df)
all_exp_df <- rbind(pre_df, just_standard) %>%
drop_na() %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df <- rbind(no_standard, just_standard) %>%
drop_na() %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
View(all_exp_df)
facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation", "standard_plot")
pre_df <- read_csv("data/all_exp.csv")
just_standard <- pre_df %>% filter(factor == "standard_plot") %>%
arrange(my_rs) %>% filter(row_number() %% 2 == 1)
no_standard <- pre_df %>% filter(factor != "standard_plot")
all_exp_df <- rbind(no_standard, just_standard) %>%
drop_na() %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
#| label: labelling-function
# creates labels vector for use with plotting functions
labels_size_contrast <- c(A = "Standard Orientation Size\nStandard Orientation Contrast",
B = "Inverted Orientation Size\nInverted Orientation Contrast",
X = "Standard Orientation Size\nInverted Orientation Contrast",
Y = "Inverted Orientation Size\nStandard Orientation Contrast")
labels_all_exp <- c(additive_manipulation = "Size and Contrast Manipulated",
contrast_manipulated = "Contrast Manipulated",
size_manipulated = "Size Manipulated",
standard_plot = "No Manipulation Present")
labels_power <- c(size_power = "Size\nPower",
contrast_power = "Contrast\nPower",
additive_power = "Size and Contrast\nCombined Power")
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
all_exp_df <- rbind(no_standard, just_standard)
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
all_exp_df <- rbind(no_standard, just_standard
all_exp_df <- rbind(no_standard, just_standard)
all_exp_df <- rbind(no_standard, just_standard)
all_exp_df <- rbind(no_standard, just_standard) %>%
drop_na() %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
View(just_standard)
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
just_standard <- pre_df %>% filter(factor == "standard_plot")
just_standard <- pre_df %>% filter(factor == "standard_plot") %>%
arrange(my_rs) %>% filter(row_number() %% 2 == 1)
View(just_standard)
no_standard <- pre_df %>% filter(factor != "standard_plot")
View(no_standard)
all_exp_df <- rbind(no_standard, just_standard) %>%
drop_na() %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
View(all_exp_df)
all_exp_df <- rbind(no_standard, just_standard) %>%
drop_na()
all_exp_df <- rbind(no_standard, just_standard) %>%
drop_na() %>%
group_by(factor, my_rs)
all_exp_df <- rbind(no_standard, just_standard) %>%
drop_na() %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
View(all_exp_df)
View(just_standard)
#| label: fig-est-multi-exp
#| include: true
#| out-width: "100%"
#| fig-asp: 0.33
#| fig-cap: Plotting *r* estimation error against the objective *r* value for contrast and size decay in isolation from previous work, and for their combination in the present study. The dashed line represents 0 error in correlation estimation, and standard deviations are shown as error bars. Note that these curves have been smoothed. Errorbars have not been
# dataframe containing values from previous work and the current is included
# in the data folder
# set facet orders
facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation", "standard_plot")
pre_df <- read_csv("data/all_exp.csv")
just_standard <- pre_df %>% filter(factor == "standard_plot") %>%
arrange(my_rs) %>% filter(row_number() %% 4 == 1)
no_standard <- pre_df %>% filter(factor != "standard_plot")
all_exp_df <- rbind(no_standard, just_standard) %>%
drop_na() %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
just_standard <- pre_df %>% filter(factor == "standard_plot") %>%
arrange(my_rs) %>% filter(row_number() %% 4 == 1)
no_standard <- pre_df %>% filter(factor != "standard_plot")
all_exp_df <- rbind(no_standard, just_standard) %>%
drop_na() %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
just_standard <- pre_df %>% filter(factor == "standard_plot") %>%
arrange(my_rs) %>% filter(row_number() %% 2 == 1)
View(no_standard)
just_standard <- pre_df %>% filter(factor == "standard_plot")
just_standard <- pre_df %>% filter(factor == "standard_plot") %>%
arrange(my_rs) %>% filter(row_number() %% 3 == 1)
no_standard <- pre_df %>% filter(factor != "standard_plot")
all_exp_df <- rbind(no_standard, just_standard) %>%
drop_na() %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
just_standard <- pre_df %>% filter(factor == "standard_plot") %>%
arrange(my_rs) %>% filter(row_number() %% 2 == 1)
no_standard <- pre_df %>% filter(factor != "standard_plot")
all_exp_df <- rbind(no_standard, just_standard) %>%
drop_na() %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)

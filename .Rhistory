labs(title = "Scatterplot with Adjusted Alpha") +
theme_minimal()
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
# Load the ggplot2 library
library(ggplot2)
# Create a dataset with 500 data points
set.seed(123)  # For reproducibility
data <- data.frame(
x = rnorm(30000),
y = rnorm(30000)
)
# Create the scatterplot using ggplot
ggplot(data, aes(x = x, y = y)) +
geom_point(aes(alpha = ifelse(x > 0, 0.5, 1))) +  # Adjust alpha based on x value
labs(title = "Scatterplot with Adjusted Alpha") +
theme_minimal()
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
# Load the ggplot2 library
library(ggplot2)
# Create a dataset with 500 data points
set.seed(123)  # For reproducibility
data <- data.frame(
x = rnorm(30000),
y = rnorm(30000)
)
# Create the scatterplot using ggplot
ggplot(data, aes(x = x, y = y)) +
geom_point(aes(alpha = ifelse(x > 0, 0.3, 1))) +  # Adjust alpha based on x value
labs(title = "Scatterplot with Adjusted Alpha") +
theme_minimal()
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
# Load the ggplot2 library
library(ggplot2)
# Create a dataset with 500 data points
set.seed(123)  # For reproducibility
data <- data.frame(
x = rnorm(30000),
y = rnorm(30000)
)
# Create the scatterplot using ggplot
ggplot(data, aes(x = x, y = y)) +
geom_point(aes(alpha = ifelse(x > 0, 0.2, 1))) +  # Adjust alpha based on x value
labs(title = "Scatterplot with Adjusted Alpha") +
theme_minimal()
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
# Load the ggplot2 library
library(ggplot2)
# Create a dataset with 500 data points
set.seed(123)  # For reproducibility
data <- data.frame(
x = rnorm(30000),
y = rnorm(30000)
)
# Create the scatterplot using ggplot
ggplot(data, aes(x = x, y = y)) +
geom_point(aes(alpha = ifelse(x > 0, 0.1, 1))) +  # Adjust alpha based on x value
labs(title = "Scatterplot with Adjusted Alpha") +
theme_minimal()
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
# Load the ggplot2 library
library(ggplot2)
# Create a dataset with 500 data points
set.seed(123)  # For reproducibility
data <- data.frame(
x = rnorm(30000),
y = rnorm(30000)
)
# Create the scatterplot using ggplot
ggplot(data, aes(x = x, y = y)) +
geom_point(aes(alpha = ifelse(x > 0, 0, 1))) +  # Adjust alpha based on x value
labs(title = "Scatterplot with Adjusted Alpha") +
theme_minimal()
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
# Load the ggplot2 library
library(ggplot2)
# Create a dataset with 500 data points
set.seed(123)  # For reproducibility
data <- data.frame(
x = rnorm(30000),
y = rnorm(30000)
)
# Create the scatterplot using ggplot
ggplot(data, aes(x = x, y = y)) +
geom_point(aes(alpha = ifelse(x > 0, 0.1, 1))) +  # Adjust alpha based on x value
labs(title = "Scatterplot with Adjusted Alpha") +
theme_minimal()
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
# Load the ggplot2 library
library(ggplot2)
# Create a dataset with 500 data points
set.seed(123)  # For reproducibility
data <- data.frame(
x = rnorm(20000),
y = rnorm(20000)
)
# Create the scatterplot using ggplot
ggplot(data, aes(x = x, y = y)) +
geom_point(aes(alpha = ifelse(x > 0, 0.1, 1))) +  # Adjust alpha based on x value
labs(title = "Scatterplot with Adjusted Alpha") +
theme_minimal()
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
# Load the ggplot2 library
library(ggplot2)
# Create a dataset with 500 data points
set.seed(123)  # For reproducibility
data <- data.frame(
x = rnorm(10000),
y = rnorm(10000)
)
ggplot(data, aes(x = x, y = y)) +
geom_point(aes(alpha = ifelse(x > 0, 0.1, 1))) +  # Adjust alpha based on x value
labs(title = "Scatterplot with Adjusted Alpha") +
theme_minimal()
ggplot(data, aes(x = x, y = y)) +
geom_point(aes(alpha = ifelse(x > 0, 0.1, 1))) +  # Adjust alpha based on x value
labs(title = "Scatterplot with Adjusted Alpha") +
theme_ggdist()
# Load the ggplot2 library
library(ggplot2)
# Create a dataset with 500 data points
set.seed(123)  # For reproducibility
data <- data.frame(
x = c(rnorm(250, mean = -1), rnorm(250, mean = 1)),
y = rnorm(500)
)
# Create the scatterplot using ggplot
scatterplot <- ggplot(data, aes(x = x, y = y)) +
geom_point(aes(alpha = ifelse(x > -0.5 & x < 0.5, 0, ifelse(x > 0, 0.2, 1)))) +  # Adjust alpha based on x value
labs(title = "Scatterplot with Blank Region") +
theme_minimal()
# Print the scatterplot
print(scatterplot)
# Create the scatterplot using ggplot
scatterplot <- ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.5 & x < 0.5, 0, ifelse(x > 0, 0.2, 1)))) +  # Adjust alpha based on x value
labs(title = "Scatterplot with Blank Region") +
theme_minimal()
# Print the scatterplot
print(scatterplot)
# Load the ggplot2 library
library(ggplot2)
# Create a dataset with 500 data points
set.seed(123)  # For reproducibility
data <- data.frame(
x = c(rnorm(250, mean = -1), rnorm(250, mean = 1)),
y = rnorm(500)
)
# Create the scatterplot using ggplot
scatterplot <- ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +  # Adjust alpha based on x value
labs(title = "Scatterplot with Blank Region") +
theme_minimal()
# Print the scatterplot
print(scatterplot)
View(data)
y = rnorm(10000)
data <- data.frame(x = c(rnorm(5000, mean = 1), rnorm(5000, mean = 1)),
y = rnorm(10000))
View(data)
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
theme_ggdist()
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
theme_ggdist() +
theme(axis.title = element_blank())
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
theme_ggdist() +
theme(axis.text =  = element_blank())
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
theme_ggdist() +
theme(axis.text   = element_blank())
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
theme_ggdist() +
theme(axis.text = element_blank(),
axis.title = element_blank())
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank(),
axis.title = element_blank())
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed")
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
set.seed(123)
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
data <- data.frame(x = c(rnorm(5000, mean = 1), rnorm(5000, mean = 1)),
y = rnorm(10000))
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
data <- data.frame(x = c(rnorm(5000, mean = 1), rnorm(5000, mean = 1)),
y = rnorm(10000))
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
xlim(-1,1) +
theme(axis.text = element_blank())
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
xlim(-10,10) +
theme(axis.text = element_blank())
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
xlim(-2,2) +
theme(axis.text = element_blank())
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
set.seed(123)
data <- data.frame(x = c(rnorm(5000, mean = 1), rnorm(5000, mean = 1)),
y = rnorm(10000))
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
set.seed(123)
data <- data.frame(x = c(rnorm(5000, mean = 1), rnorm(5000, mean = 1)),
y = rnorm(10000))
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.1, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
hist(data)
hist(data$x)
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
set.seed(123)
data <- data.frame(x = c(rnorm(5000, mean = 1), rnorm(5000, mean = -1)),
y = rnorm(10000))
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.1, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
#| label: setup
set.seed(1234) # seed for all random number generation
# Loading packages
library(tidyverse)
library(MASS)
library(emmeans)
library(scales)
library(buildmer)
library(lme4)
library(kableExtra)
library(afex)
library(papaja)
library(broom.mixed)
library(insight)
library(qwraps2)
library(lmerTest)
library(ggdist)
library(ggpubr)
library(conflicted)
library(EMAtools)
library(geomtextpath)
# fix conflicts now using the conflicted package
conflicts_prefer(dplyr::select(), dplyr::filter(), lme4::lmer())
#| label: lazyload-cache
if (!params$eval_models){ lazyload_cache_dir("size_and_contrast_new/") }
#| label: load-data
# load in data file
# Need higher guess_max so that read_csv() guesses column types correctly
additive_anon <- read_csv("data/additive_data.csv", guess_max = 18001)
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
set.seed(123)
data <- data.frame(x = c(rnorm(5000, mean = 1), rnorm(5000, mean = -1)),
y = rnorm(10000))
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.1, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
set.seed(123)
data <- data.frame(x = c(rnorm(5000, mean = -1), rnorm(5000, mean = 1)),
y = rnorm(10000))
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.1, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
set.seed(123)
data <- data.frame(x = c(rnorm(5000, mean = -1), rnorm(5000, mean = 1)),
y = rnorm(10000))
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1)))) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 1
#| out-width: "50%"
#| fig-align: "left"
set.seed(123)
data <- data.frame(x = c(rnorm(5000, mean = -1), rnorm(5000, mean = 1)),
y = rnorm(10000))
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.2, 1))),
shape = 16) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 0.75
#| out-width: "50%"
#| fig-align: "left"
#| fig-cap: Adjusting point contrast to address overplotting. Contrast between the points and the background is full (alpha = 1, L) or low (alpha = 0.2, R).
set.seed(123)
data <- data.frame(x = c(rnorm(20000, mean = -1), rnorm(20000, mean = 1)),
y = rnorm(40000))
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.1, 1))),
shape = 16) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 0.75
#| out-width: "50%"
#| fig-align: "left"
#| fig-cap: Adjusting point contrast to address overplotting. Contrast between the points and the background is full (alpha = 1, L) or low (alpha = 0.2, R).
set.seed(123)
data <- data.frame(x = c(rnorm(20000, mean = -1), rnorm(20000, mean = 1)),
y = rnorm(40000))
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.05, 1))),
shape = 16) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
#| label: fig-overplotting-examples
#| include: true
#| fig-asp: 0.75
#| out-width: "50%"
#| fig-align: "left"
#| fig-cap: Adjusting point contrast to address overplotting. Contrast between the points and the background is full (alpha = 1, L) or low (alpha = 0.2, R).
set.seed(123)
data <- data.frame(x = c(rnorm(20000, mean = -1), rnorm(20000, mean = 1)),
y = rnorm(40000))
ggplot(data, aes(x = x, y = y)) +
scale_alpha_identity() +
geom_point(aes(alpha = ifelse(x > -0.1 & x < 0.1, 0, ifelse(x > 0, 0.075, 1))),
shape = 16) +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_ggdist() +
labs(x = "",
y = "") +
theme(axis.text = element_blank())
View(VT)
#| label: fig-alpha-examples
#| include: true
#| out-width: "50%"
#| fig-cap: Demonstrating the effects of different alpha values on point contrast.
x1 <- seq(0,1, length.out = 11)
y1 <- rep(1, times = 11)
df <- data.frame(x1, y1)
ggplot(aes(x1, y1), data = df) +
geom_point(alpha = x1, size = 18, shape = 16) +
theme(panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title = element_blank(),
plot.title = element_text(size = 16),
axis.text.x = element_text(size = 14)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 11)) +
rm(x1,y1,df)

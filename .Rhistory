labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_line(data = necessary_power, aes(x = my_rs, y = mirror))
necessary_power <- curves %>% select(c("my_rs", "additive_raw_pl")) %>%
mutate(mirror = additive_raw_pl - (my_rs - (my_rs+(my_rs-additive_raw_))))
necessary_power <- curves %>% select(c("my_rs", "additive_raw_pl")) %>%
mutate(mirror = additive_raw_pl - (my_rs - (my_rs+(my_rs-additive_raw_pl))))
necessary_power <- curves %>% select(c("my_rs", "additive_raw_pl")) %>%
mutate(mirror = additive_raw_pl - (my_rs - (my_rs+(my_rs-additive_raw_pl))))
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_line(data = necessary_power, aes(x = my_rs, y = mirror))
View(curves)
necessary_power <- curves %>% select(c("my_rs", "standard_curve")) %>%
mutate(mirror = my_rs+(my_rs-standard_curve)))
necessary_power <- curves %>% select(c("my_rs", "standard_curve")) %>%
mutate(mirror = my_rs+(my_rs-standard_curve))
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_line(data = necessary_power, aes(x = my_rs, y = mirror))
necessary_power <- curves %>% select(c("my_rs", "standard_curve")) %>%
mutate(mirror = my_rs-standard_curve))
necessary_power <- curves %>% select(c("my_rs", "standard_curve")) %>%
mutate(mirror = my_rs-standard_curve)
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_line(data = necessary_power, aes(x = my_rs, y = mirror))
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_smooth(data = necessary_power, aes(x = my_rs, y = mirror))
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_smooth(data = necessary_power, aes(x = my_rs, y = mirror), se = F)
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_smooth(data = necessary_power, aes(x = my_rs, y = mirror), se = F, linetype = 2)
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_smooth(data = necessary_power, aes(x = my_rs, y = mirror), se = F, linetype = 2, colour = "black")
#| label: fig-power-plot
#| include: true
#| out-width: "100%"
#| fig-cap: Power is the different between what is observed when a decay function/combination of decay functions is used and what is observed when no manipulation is used. The dashed line represents the power that would be required to correct for the underestimation of correlation in scatterplots.
# dataframe containing values from previous experiments and the current is included
# in the data folder
curves <- read_csv("data/curves_df.csv")
# create necessary power curve
necessary_power <- curves %>% select(c("my_rs", "standard_curve")) %>%
mutate(mirror = my_rs-standard_curve)
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_smooth(data = necessary_power, aes(x = my_rs, y = mirror), se = F, linetype = 2, colour = "black") +
xlim(0.2,1) +
ylim(-0.1,0.3)
#| label: fig-power-plot
#| include: true
#| out-width: "100%"
#| fig-cap: Power is the different between what is observed when a decay function/combination of decay functions is used and what is observed when no manipulation is used. The dashed line represents the power that would be required to correct for the underestimation of correlation in scatterplots.
# dataframe containing values from previous experiments and the current is included
# in the data folder
curves <- read_csv("data/curves_df.csv")
# create necessary power curve
necessary_power <- curves %>% select(c("my_rs", "standard_curve")) %>%
mutate(mirror = my_rs-standard_curve)
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_smooth(data = necessary_power, aes(x = my_rs, y = mirror), se = F, linetype = 2, colour = "black")
xlim(0.2,1) +
ylim(-0.1,0.3)
#| label: fig-power-plot
#| include: true
#| out-width: "100%"
#| fig-cap: Power is the different between what is observed when a decay function/combination of decay functions is used and what is observed when no manipulation is used. The dashed line represents the power that would be required to correct for the underestimation of correlation in scatterplots.
# dataframe containing values from previous experiments and the current is included
# in the data folder
curves <- read_csv("data/curves_df.csv")
# create necessary power curve
necessary_power <- curves %>% select(c("my_rs", "standard_curve")) %>%
mutate(mirror = my_rs-standard_curve)
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_smooth(data = necessary_power, aes(x = my_rs, y = mirror), se = F, linetype = 2, colour = "black") +
xlim(0.2,1) +
ylim(-0.1,0.3)
#| label: fig-power-plot
#| include: true
#| out-width: "100%"
#| fig-cap: Power is the different between what is observed when a decay function/combination of decay functions is used and what is observed when no manipulation is used. The dashed line represents the power that would be required to correct for the underestimation of correlation in scatterplots.
# dataframe containing values from previous experiments and the current is included
# in the data folder
curves <- read_csv("data/curves_df.csv")
# create necessary power curve
necessary_power <- curves %>% select(c("my_rs", "standard_curve")) %>%
mutate(mirror = my_rs-standard_curve)
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
ylim(-0.1,0.3)
#| label: fig-power-plot
#| include: true
#| out-width: "100%"
#| fig-cap: Power is the different between what is observed when a decay function/combination of decay functions is used and what is observed when no manipulation is used. The dashed line represents the power that would be required to correct for the underestimation of correlation in scatterplots.
# dataframe containing values from previous experiments and the current is included
# in the data folder
curves <- read_csv("data/curves_df.csv")
# create necessary power curve
necessary_power <- curves %>% select(c("my_rs", "standard_curve")) %>%
mutate(mirror = my_rs-standard_curve)
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_smooth(data = necessary_power, aes(x = my_rs, y = mirror), se = F, linetype = 2, colour = "black", size = 0.4) +
xlim(0.2,1) +
ylim(-0.1,0.3)
#| label: fig-power-plot
#| include: true
#| out-width: "100%"
#| fig-cap: Power is the different between what is observed when a decay function/combination of decay functions is used and what is observed when no manipulation is used. The dashed line represents the power that would be required to correct for the underestimation of correlation in scatterplots.
# dataframe containing values from previous experiments and the current is included
# in the data folder
curves <- read_csv("data/curves_df.csv")
# create necessary power curve
necessary_power <- curves %>% select(c("my_rs", "standard_curve")) %>%
mutate(mirror = my_rs-standard_curve)
curves %>%
drop_na() %>%
select(c("contrast_power",
"size_power",
"additive_power",
"my_rs")) %>%
pivot_longer(cols = c("contrast_power",
"size_power",
"additive_power"),
names_to = "factor", values_to = "power") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(power), mean = mean(power)) %>%
ggplot(aes(x = my_rs, y = mean)) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 5, labeller = labeller(factor = labels_power)) +
labs(x = "Objective r",
y = "Power") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
geom_smooth(data = necessary_power,
aes(x = my_rs, y = mirror),
se = F,
linetype = 2,
colour = "black",
size = 0.4) +
xlim(0.195,1) +
ylim(-0.1,0.3)
#| label: fig-est-multi-exp
#| include: true
#| out-width: "100%"
#| fig-asp: 0.33
#| fig-cap: From left to right, plotting *r* estimation error against the objective *r* value for the standard orientation condition in the present study, for standard orientation size and contrast manipulations in previous work, and for normal scatterplots averaged over identical conditions in previous work. Error bars have been left off this plot to make interpretation more simple.
# dataframe containing values from previous work and the current is included
# in the data folder
facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation")
all_exp_df <- read_csv("data/all_exp.csv") %>%
drop_na() %>%
filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.2,1) +
geom_hline(yintercept = 0, linetype = 2)
#| label: fig-est-multi-exp
#| include: true
#| out-width: "100%"
#| fig-asp: 0.33
#| fig-cap: From left to right, plotting *r* estimation error against the objective *r* value for the standard orientation condition in the present study, for standard orientation size and contrast manipulations in previous work, and for normal scatterplots averaged over identical conditions in previous work. Error bars have been left off this plot to make interpretation more simple.
# dataframe containing values from previous work and the current is included
# in the data folder
facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation")
all_exp_df <- read_csv("data/all_exp.csv") %>%
drop_na() %>%
filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.19,1) +
geom_hline(yintercept = 0, linetype = 2)
#| label: fig-est-multi-exp
#| include: true
#| out-width: "100%"
#| fig-asp: 0.33
#| fig-cap: From left to right, plotting *r* estimation error against the objective *r* value for the standard orientation condition in the present study, for standard orientation size and contrast manipulations in previous work, and for normal scatterplots averaged over identical conditions in previous work. Error bars have been left off this plot to make interpretation more simple.
# dataframe containing values from previous work and the current is included
# in the data folder
facet_order <- c("contrast_manipulated", "size_manipulated", "additive_manipulation")
all_exp_df <- read_csv("data/all_exp.csv") %>%
drop_na() %>%
filter(factor != "standard_plot") %>%
group_by(factor, my_rs) %>%
summarise(sd = sd(difference), mean = mean(difference)) %>%
mutate(factor = factor(factor, levels = facet_order))
all_exp_df %>%
ggplot(aes(x = my_rs, y = mean)) +
geom_errorbar(mapping = aes(ymin = mean + sd, ymax = mean - sd),width = 0.01, size = 0.3) +
theme_ggdist() +
scale_y_continuous(breaks = seq(-0.4,1, 0.2)) +
theme(strip.text = element_text(size = 6, margin = margin(1,0,1,0, "mm")), aspect.ratio = 1,
axis.text = element_text(size = 7),
axis.title = element_text(size = 8)) +
facet_wrap(factor ~., ncol = 4, labeller = labeller(factor = labels_all_exp)) +
labs(x = "Objective r",
y = "Mean r Estimation Error") +
geom_smooth(se = FALSE, colour = "black", size = 0.4) +
xlim(0.18,1) +
geom_hline(yintercept = 0, linetype = 2)
install.packages(c("minqa", "RcppArmadillo"))
remove.packages("minqa")
install.packages("minqa")
install.packages("minqa")
install.packages("minqa")
install.packages("minqa")
#| label: setup
set.seed(1234) # seed for all random number generation
# Loading packages
library(tidyverse)
library(MASS)
library(emmeans)
library(scales)
library(buildmer)
library(lme4)
library(kableExtra)
library(afex)
library(papaja)
library(broom.mixed)
library(insight)
library(qwraps2)
library(lmerTest)
library(ggdist)
library(ggpubr)
library(conflicted)
library(EMAtools)
library(ggtext)
library(r2glmm)
# fix conflicts now using the conflicted package
conflicts_prefer(dplyr::select(), dplyr::filter(), lme4::lmer())
setwd("C:/Users/mbch4gs2/local_work/papers/size_and_contrast_new")
knitr::purl("size_and_contrast_new.qmd")
library(NCmisc)
list.functions.in.file("size_and_contrast_new.R")

#| label: setup
set.seed(1234) # seed for all random number generation
# Loading packages
library(tidyverse)
library(MASS)
library(emmeans)
library(scales)
library(buildmer)
library(lme4)
library(kableExtra)
library(papaja)
library(qwraps2)
library(lmerTest)
library(ggdist)
library(ggpubr)
library(conflicted)
library(ggtext)
library(r2glmm)
# fix conflicts now using the conflicted package
conflicts_prefer(dplyr::select(), dplyr::filter(), lme4::lmer())
#| label: plot-examples-function
set.seed(1234)
my_sample_size = 128
my_desired_r = 0.6
mean_variable_1 = 0
sd_variable_1 = 1
mean_variable_2 = 0
sd_variable_2 = 1
mu <- c(mean_variable_1, mean_variable_2)
myr <- my_desired_r * sqrt(sd_variable_1) * sqrt(sd_variable_2)
mysigma <- matrix(c(sd_variable_1, myr, myr, sd_variable_2), 2, 2)
corr_data = as_tibble(mvrnorm(my_sample_size, mu, mysigma, empirical = TRUE))
corr_model <- lm(V2 ~ V1, data = corr_data)
my_residuals <- abs(residuals(corr_model))
data_with_resid <- round(cbind(corr_data, my_residuals), 2)
slopes <- data_with_resid %>%
mutate(slope_0.25 = 1-(0.25)^my_residuals) %>%
mutate(slope_inverted = (1 + (0.25)^ my_residuals)-1) %>%
mutate(slope_inverted_floored = pmax(0.1,(1+(0.25)^my_residuals)-1))
plot_example_function <- function (data, size, contrast, title) {
set.seed(1234)
ggplot(data, aes(x = V1, y = V2)) +
scale_size_identity() +
geom_point(aes(size = 4*(size + 0.2),
alpha = contrast),
shape = 16)  +
theme_classic() +
theme(axis.text = element_blank(),
plot.margin = unit(c(0,0,0,0), "cm"),
legend.position = "none",
plot.title = element_text(size = 13),
axis.title = element_blank()) +
labs(title = title)
}
plot_example_function(slopes,
(1-slopes$slope_0.25),
(1-slopes$slope_0.25),
"Standard Orientation Size\nStandard Orientation Contrast")
plot_example_function(slopes,
(1-slopes$slope_0.25),
(1-slopes$slope_0.25),
"")
plot_example_function(slopes,
(1-slopes$slope_0.25),
(1),
"")
plot_example_function(slopes,
(1-slopes$slope_0.25),
(3),
"")
plot_example_function(slopes,
(1-slopes$slope_0.25),
(),
plot_example_function(slopes,
(1-slopes$slope_0.25),
(0),
"")
plot_example_function(slopes,
(1-slopes$slope_0.25),
(1),
"")
plot_example_function(slopes,
(1-slopes$slope_0.25),
(100),
"")
plot_example_function(slopes,
(10-slopes$slope_0.25),
(100),
"")
plot_example_function(slopes,
(1),
(1-slopes$slope_0.25),
"")
c <- plot_example_function(slopes,
(1),
(1-slopes$slope_0.25),
"")
c
c <- plot_example_function(slopes,
(0.2),
(1-slopes$slope_0.25),
"")
c
c <- plot_example_function(slopes,
(0.05),
(1-slopes$slope_0.25),
"")
c
corr_plot <- plot_example_function(slopes,
0.05,
(1-slopes$slope_0.25),
"Correlation\nPerception") +
tasks_theme() +
geom_point(aes(alpha = 1), size = 0.5) +
annotate(geom = "text", x = -2, y = 2, label = "r = 0.6", size = 3.5)
theme_classic() %+replace%
theme(axis.text = element_blank(),
plot.margin = unit(c(0,0,0,0), "cm"),
legend.position = "none",
plot.title = element_text(size = 7.5, hjust = 0, vjust = 1),
axis.title = element_blank(),
axis.line = element_line(linewidth = 0.25),
axis.ticks = element_line(linewidth = 0.25),
axis.ticks.length = unit(1.375, "pt"))
theme_classic() %+replace%
theme(axis.text = element_blank(),
plot.margin = unit(c(0,0,0,0), "cm"),
legend.position = "none",
plot.title = element_text(size = 7.5, hjust = 0, vjust = 1),
axis.title = element_blank(),
axis.line = element_line(linewidth = 0.25),
axis.ticks = element_line(linewidth = 0.25),
axis.ticks.length = unit(1.375, "pt"))
set.seed(123)
tasks_theme <- function() {
theme_classic() %+replace%
theme(axis.text = element_blank(),
plot.margin = unit(c(0,0,0,0), "cm"),
legend.position = "none",
plot.title = element_text(size = 7.5, hjust = 0, vjust = 1),
axis.title = element_blank(),
axis.line = element_line(linewidth = 0.25),
axis.ticks = element_line(linewidth = 0.25),
axis.ticks.length = unit(1.375, "pt"))
}
corr_plot <- plot_example_function(slopes,
0.05,
(1-slopes$slope_0.25),
"Correlation\nPerception") +
tasks_theme() +
geom_point(aes(alpha = 1), size = 0.5) +
annotate(geom = "text", x = -2, y = 2, label = "r = 0.6", size = 3.5)
corr_plot
